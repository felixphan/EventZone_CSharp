@using EventZone.Models
@using EventZone.Helpers
@{
    User admin = UserHelpers.GetCurrentAdmin(Session);
    if (admin == null)
    {
        Response.Redirect("~/Admin");
    }
    ViewBag.Title = "ManageUser";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

}
<style>
.myButton {
	-moz-box-shadow:inset 0px 0px 2px -29px #cc2288;
	-webkit-box-shadow:inset 0px 0px 2px -29px #cc2288;
	box-shadow:inset 0px 0px 2px -29px #cc2288;
	background-color:#d3ebd9;
	-moz-border-radius:17px;
	-webkit-border-radius:17px;
	border-radius:17px;

	display:inline-block;
	cursor:pointer;
	color:#ffffff;
	font-family:Arial;
	font-size:17px;
	padding:7px 14px;
	text-decoration:none;
	text-shadow:1px 0px 20px #2f6627;
}


.myButton:hover {
	background-color:#de45d4;
}
.myButton:active {
	position:relative;
	top:1px;
}

</style>

<style>
    .scroll-content {
        height: 500px;
    }
</style>

<div class="modal fade d_modal" id="add-new-user-modal" role="dialog">
    <div class="modal-dialog" style="margin-top: 120px; width: 30%;">
        <!-- Modal content-->
        <div class="panel panel-info d_margin_top">
            <div class="panel-heading">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <div class="panel-title">Add new user</div>
            </div>
            @Html.Action("AddNewUser", "Admin")
        </div>
    </div>
</div>




<div class="modal fade d_modal" id="change-email-modal" role="dialog">
    <div class="modal-dialog" style="margin-top: 120px; width: 30%;">
        <!-- Modal content-->
        <div class="panel panel-info d_margin_top">
            <div class="panel-heading">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <div class="panel-title">Change Email</div>
            </div>
            <div style="padding-top: 10px" class="panel-body">
                <div id="ChangeEmailError"></div>
                <div class="cover_all_functions" style="text-align: -webkit-center;">
                    <p>Enter new e-mail:</p>
                    <div style="margin-bottom: 15px" class="input-group">
                        <span class="input-group-addon"><i class="glyphicon glyphicon-envelope"></i></span>
                        <input type="text" name="newEmail" id="newEmail">
                    </div>
                </div>
                <input hidden id="target-user-ID">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" class="btn btn-success" id="change-email-submit" onclick="changeEmailPost()" value="Save" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 interactButton" style="margin-left: 5%; margin-bottom: 10px">
    <button class="btn btn-success" type="submit" id="btn-add-user">
        Add New User
    </button>
    <input type="text" name="Keyword" id="Keyword" class="form-control" aria-label="Text input with segmented button dropdown" placeholder="Search for user or role" style="width: 250px; display: inline-block">
    <button class="btn btn-default" type="submit">
        <span class="glyphicon glyphicon-search"></span>
    </button>
    <button class="myButton" id="filter-all">All</button>
    <button class="myButton" id="filter-user">User</button>
    <button class="myButton" id="filter-mod">Mod</button>
    <button class="myButton" id="filter-locked">Lock</button>
    Sort by
    <span class="select-style">
        <select id="sort">
            <option value="default">Default</option>
            <option value="datejoin">Date Join</option>
        </select>
    </span>
    <div>
        <h4>
            <span id="number-result">
            </span>
        </h4>
    </div>
</div>

<div class="scroll-content" style="height:400px" id="user-r">
        @Html.Action("SearchUser", "Admin")
</div>

<script>
    $("#btn-add-user").click(function () {

        $("#add-new-user-modal").modal("show");
    })

</script>
<script>
    function LockUser(userID) {
        $.ajax({
            url: "/Admin/LockUser",
            type: "POST",
            dataType: "json",
            data: { userID: userID },
            success: function (data) {
                if (data.state == 0) {
                    errorShow(data.error, data.message)
                } else {
                    $("#lock-icon-" + userID).empty();
                    $("#lock-icon-" + userID).prepend('<span class="col-md-1 col-lg-1 label label-danger"><span class=" glyphicon glyphicon-lock"></span></span>')
                    $("#lock-user-" + userID).remove();
                    $("#ul-lock-unlock-" + userID).prepend('<li><a href="#" id="unlock-user-' + userID + '" onclick="UnlockUser(' + userID + ')">Unlock</a></li>')
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR);
                console.log(textStatus);
                console.log(errorThrown);
            }
        })
    }
    function UnlockUser(userID) {
        $.ajax({
            url: "/Admin/UnlockUser",
            type: "POST",
            dataType: "json",
            data: { userID: userID },
            success: function (data) {
                if (data.state == 0) {
                    errorShow(data.error, data.message)
                } else {
                    $("#lock-icon-" + userID).empty();
                    $("#unlock-user-" + userID).remove();
                    $("#ul-lock-unlock-" + userID).prepend('<li><a href="#" id="lock-user-' + userID + '" onclick="LockUser(' + userID + ')">Lock</a></li>')
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(jqXHR);
                console.log(textStatus);
                console.log(errorThrown);
            }
        })
    }

    function ShowChangeEmailModal(userID) {
        $("#change-email-modal").modal("show");
        $("#target-user-ID").val(userID);
        $("#newEmail").val("");
        $("#ChangeEmailError").empty();
    }
    function changeEmailPost() {
        if ($("#target-user-ID").val() == null || isNaN($("#target-user-ID").val())) {
            alert("somthing wrong!")
        } else if ($("#newEmail").val() == null || $("#newEmail").val() == "") {
            $("#ChangeEmailError").empty();
            $("#ChangeEmailError").append("<p>Please enter new email!<p>");
        } else if (!checkEmail($("#newEmail").val())) {
            $("#ChangeEmailError").empty();
            $("#ChangeEmailError").append("<p>Wrong email format!<p>");
        } else {
            var userID = $("#target-user-ID").val();
            var newEmail = $("#newEmail").val();
            $.ajax({
                url: "/Admin/ChangeUserEmail",
                type: "POST",
                dataType: "json",
                data: { userID: userID, newEmail: newEmail },
                success: function (data) {
                    if (data.state == 0) {
                        $("#change-email-modal").modal("hide");
                        errorShow(data.error, data.message)
                    } else {
                        $("#change-email-modal").modal("hide");
                        $("#ChangeEmailError").empty();
                        $("#target-user-ID").val(null);
                        $("#newEmail").val(null);
                        $("#email-display-" + userID).empty();
                        $("#email-display-" + userID).append("<p>Email: " + data.newEmail + "</p>");
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                    console.log(textStatus);
                    console.log(errorThrown);
                }
            })
        }
    }

    function checkEmail(email) {
        var filter = /^([\w-]+(?:\.[\w-]+)*)@@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i
        if (filter.test(email))
            return true;
        else {
            return false;
        }
    }
    function SetMod(userID) {
        var r = confirm("Do you want to set this user to Mod?");
        if (r == true) {
            $.ajax({
                url: "/Admin/SetMod",
                type: "POST",
                dataType: "json",
                data: { userID: userID },
                success: function (data) {
                    if (data.state == 0) {
                        errorShow(data.error, data.message)
                    } else {
                        $("#role-define-" + userID).empty();
                        $("#role-define-" + userID).append('<span id="role-define-' + userID + '" class="col-md-1 col-lg-1 label label-primary" style="font-size:86%">Mod</span>')
                        $("#set-mod-" + userID).remove();
                        $("#ul-lock-unlock-" + userID).prepend('<li><a href="#" id="unset-mod-' + userID + '" onclick="UnSetMod(' + userID + ')">UnSet Mod</a></li>')

                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                    console.log(textStatus);
                    console.log(errorThrown);
                }
            })
        } else {

        }
    }

    function UnSetMod(userID) {
        var r = confirm("Do you want to set this Mod to User?");
        if (r == true) {
            $.ajax({
                url: "/Admin/UnSetMod",
                type: "POST",
                dataType: "json",
                data: { userID: userID },
                success: function (data) {
                    if (data.state == 0) {
                        errorShow(data.error, data.message)
                    } else {
                        $("#role-define-" + userID).empty();
                        $("#role-define-" + userID).append('<span id="role-define-' + userID + '" class="col-md-1 col-lg-1 label label-success" style="font-size:86%">User</span>');
                        $("#unset-mod-" + userID).remove();
                        $("#ul-lock-unlock-" + userID).prepend('<li><a href="#" id="set-mod-' + userID + '" onclick="SetMod(' + userID + ')">Set Mod</a></li>')
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                    console.log(textStatus);
                    console.log(errorThrown);
                }
            })
        } else {

        }
    }

    function SetAdmin(userID) {
        var r = confirm("Do you want to set this user to Admin?");
        if (r == true) {
            $.ajax({
                url: "/Admin/SetAdmin",
                type: "POST",
                dataType: "json",
                data: { userID: userID },
                success: function (data) {
                    if (data.state == 0) {
                        errorShow(data.error, data.message)
                    } else {
                        $("#role-define-" + userID).empty();
                        $("#role-define-" + userID).append('<div style="margin-bottom: 10px" class="input-group">' +
                            '<span class="input-group-addon" id="user-role-define-' + userID + '">Admin</span>' +
                        '</div>')
                        $("#set-admin-" + userID).remove();
                        $("#ul-lock-unlock-" + userID).prepend('<li><a href="#" id="unset-admin-' + userID + '" onclick="UnSetAdmin(' + userID + ')">UnSet Admin</a></li>');
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                    console.log(textStatus);
                    console.log(errorThrown);
                }
            })
        } else {

        }
    }

    function UnSetAdmin(userID) {
        var r = confirm("Do you want to set this Admin to User?");
        if (r == true) {
            $.ajax({
                url: "/Admin/UnSetAdmin",
                type: "POST",
                dataType: "json",
                data: { userID: userID },
                success: function (data) {
                    if (data.state == 0) {
                        errorShow(data.error, data.message)
                    } else {
                        $("#role-define-" + userID).empty();
                        $("#role-define-" + userID).append('');
                        $("#unset-admin-" + userID).remove();
                        $("#ul-lock-unlock-" + userID).prepend('<li><a href="#" id="set-admin-' + userID + '" onclick="SetAdmin(' + userID + ')">Set Admin</a></li>')
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(jqXHR);
                    console.log(textStatus);
                    console.log(errorThrown);
                }
            })
        } else {

        }
    }


    var all = true;
    //var mod = false;
    //var user = false;
    var user = false;
    var mod = false;
    var lock = false;
    var page = 2;
    
    var sort = $("#sort").val();
    $("#sort").change(function () {
        sort = $("#sort").val();
        $("#event-r").empty();
        page = 1;
        Search();
    })
    var keyword;
    $("#Keyword").change(function () {
        keyword = $("#Keyword").val();

    })
    
    $("#filter-all").css("background", "#de45d4")
    $("#filter-all").click(function(){
        //mod = false;
        //user = false;
        user = false;
        mod = false;
        lock = false;
        all = true;
        $(".myButton").css("background", "#d3ebd9")
        $("#filter-all").css("background", "#de45d4")
        page = 1;
        $("#user-r").empty();

        Search();
    })

    //$("#filter-user").click(function () {
    //    if (user) {
    //        $("#filter-user").css("background", "#d3ebd9")
    //        user = false;
    //    }
    //    else {
    //        $("#filter-user").css("background", "#de45d4")
    //        user = true;
    //        $("#filter-all").css("background", "#d3ebd9")
    //        all = false;
    //    }
    //})
    //$("#filter-mod").click(function () {
    //    if (mod) {
    //        $("#filter-mod").css("background", "#d3ebd9")
    //        mod = false;
    //    }
    //    else {
    //        $("#filter-mod").css("background", "#de45d4")
    //        mod = true;
    //        $("#filter-all").css("background", "#d3ebd9")
    //        all = false;
    //    }
    //})
    $("#filter-locked").click(function () {
        if (lock) {
            $("#filter-locked").css("background", "#d3ebd9")
            lock = false;
            page = 1;
            $("#user-r").empty();
            Search();
        }
        else {
            $("#filter-locked").css("background", "#de45d4")
            lock = true;
            $("#filter-all").css("background", "#d3ebd9")
            all = false;
            page = 1;
            $("#user-r").empty();
            Search();
        }
    })

    $("#filter-user").click(function () {
        if (user) {
            $("#filter-user").css("background", "#d3ebd9")
            user = false;
            page = 1;
            $("#user-r").empty();
            Search();
        }
        else {
            $("#filter-user").css("background", "#de45d4")
            user = true;
            $("#filter-all").css("background", "#d3ebd9")
            all = false;
            page = 1;
            $("#user-r").empty();
            Search();
        }
    })
    $("#filter-mod").click(function () {
        if (mod) {
            $("#filter-mod").css("background", "#d3ebd9")
            mod = false;
            page = 1;
            $("#user-r").empty();
            Search();
        }
        else {
            $("#filter-mod").css("background", "#de45d4")
            mod = true;
            $("#filter-all").css("background", "#d3ebd9")
            all = false;
            page = 1;
            $("#user-r").empty();
            Search();
        }
    })
  

    //set time delay when press to search

    var delay = (function () {
        var timer = 0;
        return function (callback, ms) {
            clearTimeout(timer);
            timer = setTimeout(callback, ms);
        };
    })();
    $('#Keyword').keyup(function () {
        delay(function () {
            page = 1;
            $("#user-r").empty();
            Search();
        }, 2000);
    });

    function Search() {
        $.ajax({
            url: "/Admin/SearchUser",
            type: "post",
            dataType: "html",
            data: {keyword:keyword,all:all,locked:lock, user:user , mod:mod, sort:sort , page:page },
            success: function (data) {
                $("#user-r").append(data);
                page = page + 1;
                $("#loading").remove();
            },
            error: function () {
            }
        })
    }
    ///fade event


  

    $(document).ready(function () {
        $('#user-r').bind('scroll', EventScroll);
    });
    function EventScroll(e) {
        var elem = $(e.currentTarget);
        if ((elem.innerHeight() + elem.scrollTop()) >= elem[0].scrollHeight&& page>=2) { 
            Search()
        }
    }



</script>
<script src="~/Scripts/Admin/ChangeUserEmail.js"></script>